//
//  ContentView.swift
//  QC
//
//  Created by Sergio Perales on 1/30/22.
//

import SwiftUI

let lightColor = Color(red: 255, green: 0, blue: 255)

let storedUsername = "Sperale1"
let storedpasswrod = "Limacnp7"

struct ContentView: View {
    @State var username: String = ""
    @State var password: String = ""
    
    @State var authenticationDidFail: Bool = false
    @State var authenticationDidSucceed: Bool = false
    
    
    var body: some View {
        
        ZStack {
            VStack {
                LogoText()
                userImage()
                UsernameTextField(username: $username)
                PasswordSecureField(password: $password)
                if authenticationDidFail {
                    Text("WRONG! Try Again.")
                        .offset(y: -10)
                        .foregroundColor(.red)
                    
                }
                
                Button (action: {
                    if self.username == storedUsername && self.password == storedpasswrod {
                        self.authenticationDidSucceed = true
                        self.authenticationDidFail = false
                    } else {
                        self.authenticationDidFail = true
                        self.authenticationDidSucceed = false
                    }
                }){
                    LoginButtonContent()
                }
            }
            
            .padding()
                if authenticationDidSucceed {
                    Text("READY TO ROCK!")
                        .font(.headline)
                        .frame(width: 250, height: 80)
                        .background(Color.green)
                        .cornerRadius(20.0)
                        .animation(Animation.default)
                }
    }
}

struct ContentView_Previews: PreviewProvider {
    static var previews: some View {
        ContentView()
    }
}

struct LogoText: View {
    var body: some View {
        Text("QUICK CONNECT")
            .font(.largeTitle)
            .fontWeight(.semibold)
            .padding(.bottom, 20)
    }
}

struct userImage: View {
    var body: some View {
        Image("userImage")
            .resizable()
            .aspectRatio(contentMode: .fill)
            .frame(width: 150, height: 150)
            .clipped()
            .cornerRadius(150)
            .padding( .bottom, 75)
    }
}

struct LoginButtonContent: View {
    var body: some View {
        Text("LOGIN")
            .font(.headline)
            .foregroundColor(.white)
            .padding()
            .frame(width: 220, height: 60)
            .background(Color.black)
            .cornerRadius(35.0)
    }
}
}

struct UsernameTextField: View {
    
    @Binding var username: String
    
    var body: some View {
        TextField("Username", text: $username)
            .padding()
            .background(lightColor)
            .cornerRadius(5.0)
            .padding(.bottom, 20)
    }
}


struct PasswordSecureField: View {
    
    @Binding var password: String
    
    
    var body: some View {
        SecureField("Password", text: $password)
            .padding()
            .background(lightColor)
            .cornerRadius(5.0)
            .padding(.bottom, 20)
    }
}
